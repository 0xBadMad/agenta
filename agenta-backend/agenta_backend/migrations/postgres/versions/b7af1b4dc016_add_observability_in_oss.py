"""add_observability_in_oss

Revision ID: b7af1b4dc016
Revises: d0dca996e123
Create Date: 2024-10-11 10:19:12.331361

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "b7af1b4dc016"
down_revision: Union[str, None] = "d0dca996e123"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "invocation_span",
        sa.Column("project_id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.Column("updated_at", sa.TIMESTAMP(), nullable=True),
        sa.Column("updated_by_id", sa.UUID(), nullable=True),
        sa.Column("root_id", sa.UUID(), nullable=False),
        sa.Column("tree_id", sa.UUID(), nullable=False),
        sa.Column("tree_type", sa.Enum("INVOCATION", name="treetype"), nullable=True),
        sa.Column("node_id", sa.UUID(), nullable=False),
        sa.Column("node_name", sa.String(), nullable=False),
        sa.Column(
            "node_type",
            sa.Enum(
                "AGENT",
                "WORKFLOW",
                "CHAIN",
                "TASK",
                "TOOL",
                "EMBEDDING",
                "QUERY",
                "COMPLETION",
                "CHAT",
                "RERANK",
                name="nodetype",
            ),
            nullable=True,
        ),
        sa.Column("parent_id", sa.UUID(), nullable=True),
        sa.Column("time_start", sa.TIMESTAMP(), nullable=False),
        sa.Column("time_end", sa.TIMESTAMP(), nullable=False),
        sa.Column("time_span", sa.BigInteger(), nullable=True),
        sa.Column(
            "status_code",
            sa.Enum("UNSET", "OK", "ERROR", name="statuscode"),
            nullable=False,
        ),
        sa.Column("status_message", sa.String(), nullable=True),
        sa.Column("data", postgresql.JSON(astext_type=sa.Text()), nullable=True),
        sa.Column("metrics", postgresql.JSON(astext_type=sa.Text()), nullable=True),
        sa.Column("meta", postgresql.JSON(astext_type=sa.Text()), nullable=True),
        sa.Column("tags", postgresql.HSTORE(text_type=sa.Text()), nullable=True),
        sa.Column("refs", postgresql.HSTORE(text_type=sa.Text()), nullable=True),
        sa.Column("links", postgresql.HSTORE(text_type=sa.Text()), nullable=True),
        sa.Column("otel", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.PrimaryKeyConstraint("project_id", "node_id"),
    )
    op.create_index(
        "index_project_id_node_id",
        "invocation_span",
        ["project_id", "created_at"],
        unique=False,
    )
    op.create_index(
        "index_project_id_root_id",
        "invocation_span",
        ["project_id", "root_id"],
        unique=False,
    )
    op.create_index(
        "index_project_id_tree_id",
        "invocation_span",
        ["project_id", "tree_id"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("index_project_id_tree_id", table_name="invocation_span")
    op.drop_index("index_project_id_root_id", table_name="invocation_span")
    op.drop_index("index_project_id_node_id", table_name="invocation_span")
    op.drop_table("invocation_span")
    # ### end Alembic commands ###
