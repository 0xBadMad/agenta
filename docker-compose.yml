services:
  registry:
    image: registry:2
    ports:
      - 5001:5000
    networks:
      - agenta-network

  reverse-proxy:
    image: traefik:v2.0
    command: --api.insecure=true --providers.docker --entrypoints.web.address=:80
    ports:
      - "80:80" # The HTTP port
      - "8080:8080" # The Web UI (enabled by --api.insecure=true)
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - agenta-network

  deploy-server:
    build: ./agenta-deploy-server
    volumes:
      - ./agenta-deploy-server/deploy_server:/app/deploy_server
      - ./agenta-deploy-server/tests:/app/tests
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - registry
    labels:
      - "traefik.http.routers.deploy-server.rule=PathPrefix(`/api/`)"
      - "traefik.http.routers.deploy-server.entrypoints=web"
      - "traefik.http.middlewares.deploy-server-strip.stripprefix.prefixes=/api"
      - "traefik.http.middlewares.deploy-server-strip.stripprefix.forceslash=true"
      - "traefik.http.routers.deploy-server.middlewares=deploy-server-strip"
      - "traefik.http.services.deploy-server.loadbalancer.server.port=8000"
      - "traefik.http.routers.deploy-server.service=deploy-server"
      # we redirect /openapi.json to /api/openapi.json, otherwise /docs would not work for fastapi
      # - "traefik.http.middlewares.deploy-server-openapi.redirectregex.regex=^/openapi.json$"
      # - "traefik.http.middlewares.deploy-server-openapi.redirectregex.replacement=/api/openapi.json"
      # - "traefik.http.middlewares.deploy-server-openapi.redirectregex.permanent=true"
      # - "traefik.http.routers.deploy-server-openapi.rule=Path(`/openapi.json`)"
      # - "traefik.http.routers.deploy-server-openapi.middlewares=deploy-server-openapi"

    networks:
      - agenta-network
    command:
      [
        "uvicorn",
        "deploy_server.main:app",
        "--host",
        "0.0.0.0",
        "--port",
        "8000",
        "--reload",
        "--root-path",
        "/api"
      ]

  agenta-web:
    build:
      context: ./agenta-web
      dockerfile: dev.Dockerfile
    volumes:
      - ./agenta-web/src:/app/src
      - ./agenta-web/public:/app/public
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      # - MONGO_URI=mongodb://username:password@mongo:27017/test?authSource=admin
    networks:
      - agenta-network
    # depends_on:
    #   mongo:
    #     condition: service_healthy


networks:
  agenta-network:
    name: agenta-network
    # volumes:
    # mongodb_data:
    # api_test:



    # api:
    #   build: ./api
    #   environment:
    #     - OPENAI_API_KEY=${OPENAI_API_KEY}
    #     - MONGODB_URI=mongodb://username:password@mongo:27017
    #   ports:
    #     - "8000:8000"
    #   depends_on:
    #     mongo:
    #       condition: service_healthy
    #   networks:
    #     - agenta-network
    #   volumes:
    #     - ./api/api:/app/api

    # mongo:
    #   image: mongo:5.0
    #   environment:
    #     MONGO_INITDB_ROOT_USERNAME: username
    #     MONGO_INITDB_ROOT_PASSWORD: password
    #   volumes:
    #     - mongodb_data:/data/db
    #   ports:
    #     - "27017:27017"
    #   networks:
    #     - agenta-network
    #   healthcheck:
    #     test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
    #     interval: 10s
    #     timeout: 10s
    #     retries: 20

    # mongo_express:
    #   image: mongo-express
    #   environment:
    #     ME_CONFIG_MONGODB_ADMINUSERNAME: username
    #     ME_CONFIG_MONGODB_ADMINPASSWORD: password
    #     ME_CONFIG_MONGODB_SERVER: mongo
    #   ports:
    #     - "8081:8081"
    #   networks:
    #     - agenta-network
    #   depends_on:
    #     mongo:
    #       condition: service_healthy

    # agenta-bff:
    #   build:
    #     context: ./agenta-bff
    #     dockerfile: dev.Dockerfile
    #   volumes:
    #     - ./agenta-bff/src:/app/src
    #   ports:
    #     - "3030:3030"
    #   environment:
    #     - NODE_ENV=development
    #     - MONGO_URI=mongodb://username:password@mongo:27017/test?authSource=admin
    #   networks:
    #     - agenta-network
    #   depends_on:
    #     mongo:
    #       condition: service_healthy
